# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json
include:
  - project: templates/ci
    file: default.yml

# Diasable cache
cache: []

variables:
  GIT_STRATEGY: clone
  DOCKER_IMAGE_BASE: ${CI_REGISTRY}/docker/alpine-base/cache:latest
  TRIGGER_SHELLCHECK:
    description: Run ShellCheck
    value: "DISABLED"
    options:
      - "ENABLED"
      - "DISABLED"

workflow:
  rules:
    # If $VERSION variable defined have it take precedence over the commit tag
    - if: $VERSION
      variables:
        RELEASE: "${VERSION}"
    # When the CI_COMMIT_TAG is present we are override the Gradle command
    # and configuring the tag as the version to build
    - if: $CI_COMMIT_TAG
      variables:
        RELEASE: "${CI_COMMIT_TAG}"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"
    - when: always

shellcheck:
  stage: test
  image:
    name: ${CI_REGISTRY}/tools/shellcheck:latest
    pull_policy: always
  interruptible: true
  needs: []
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        compare_to: "refs/heads/main"
        paths:
          - rootfs/*
    - if: $TRIGGER_SHELLCHECK == 'ENABLED'
  before_script:
    - shellcheck --version
  after_script: []
  script:
    - find rootfs/etc/conf.d -type f | xargs -n 1 shellcheck -a -x --color=always
    - find rootfs/etc/s6-overlay -type f -name 'run' | xargs -n 1 shellcheck -a -x --color=always
    - find scripts/ -type f | xargs -n 1 shellcheck -a -x --color=always

check-new-tags:
  stage: test
  image:
    name: registry.timmertech.nl/tools/gitlab-cli:latest
    pull_policy: always
  rules:
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "web"
  variables:
    HEALTH_CHECK_UUID: f032f24d-963c-4014-9425-f6a9ac8b7070
  before_script: []
  script:
    - scripts/check-new-tag

release:
  extends: .docker-build-multi
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    REMOTE_VERSION: ${CI_COMMIT_TAG}
    PLATFORM: "linux/arm64,linux/amd64"
    DOCKER_HUB: "ENABLED"
    DOCKER_IMAGE: ${DOCKER_IMAGE_PATH}:${CI_COMMIT_TAG}
    DOCKER_ARGS: >-
      --build-arg REMOTE_VERSION=${REMOTE_VERSION}
      --cache-from=type=registry,ref=${DOCKER_IMAGE_BASE}
    DOCKER_TAGS: >-
      --tag=${DOCKER_IMAGE_HUB_PATH}:${CI_COMMIT_TAG}
