image: registry.timmertech.nl/docker/docker:latest

stages:
  - verify
  - build
  - deploy

include:
  - project: templates/ci
    file: docker.yml
  - project: templates/ci
    file: docker-hub.yml

################################################################################
# Workflow
################################################################################
workflow:
  rules:
    # If $VERSION variable defined have it take precedence over the commit tag
    - if: $VERSION
      variables:
        RELEASE: "${VERSION}"
    # When the CI_COMMIT_TAG is present we are override the Gradle command
    # and configuring the tag as the version to build
    - if: $CI_COMMIT_TAG
      variables:
        RELEASE: "${CI_COMMIT_TAG}"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"
    - when: always

################################################################################
# Templates
################################################################################
.build:
  interruptible: true
  script:
    - docker build --pull
      --build-arg VCS_REF="${CI_COMMIT_SHORT_SHA}"
      --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
      --build-arg CI_PROJECT_NAME=${CI_PROJECT_NAME}
      --build-arg CI_PROJECT_URL="${CI_PROJECT_URL}"
      --build-arg DOCKER_IMAGE=${DOCKER_IMAGE}
      --build-arg DOCKER_PROXY_HOST=${DOCKER_PROXY_HOST}
      --file=${DOCKER_FILE}
      --tag=${DOCKER_IMAGE} .
    - docker push ${DOCKER_IMAGE}

################################################################################
# Job Configuration
################################################################################
# Verify Bash Scripting
shellcheck:
  stage: verify
  image:
    name: ${CI_REGISTRY}/docker/shellcheck:latest
  interruptible: true
  cache: {}
  needs: []
  only:
    refs:
      - master
      - branches
    changes:
      - "rootfs/*"
  variables:
    FILES: "find root/ -type f"
  before_script:
    - shellcheck --version
  script:
    - ${FILES} | xargs -n 1 shellcheck --color=always

checkversion:
  stage: verify
  image: registry.timmertech.nl/tools/chkver:latest
  only:
    variables:
      - $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN"
    refs:
      - master
      - schedules
  before_script: []
  script:
    - scripts/check-version
# build:
#   stage: build
#   extends: .build
#   only:
#     - master
#     - schedules

# dockerhub:
#   stage: deploy
#   extends: .dockerhub
#   variables:
#     DOCKERHUB_IMAGE: ${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${CI_PROJECT_NAME}:latest
#   only:
#     - master
#     - schedules

# release:
#   stage: build
#   extends: .build
#   variables:
#     DOCKER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}
#   only:
#     - tags

# dockerhub-release:
#   stage: deploy
#   extends: .dockerhub
#   variables:
#     DOCKERHUB_IMAGE: ${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
#   only:
#     - tags
