# yaml-language-server: $schema=https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json
include:
  - project: templates/ci
    file: default.yml

# Diasable cache
cache: []

variables:
  GIT_STRATEGY: clone
  DOCKER_IMAGE_BASE: ${CI_REGISTRY}/docker/alpine-base/cache:latest

workflow:
  rules:
    # If $VERSION variable defined have it take precedence over the commit tag
    - if: $VERSION
      variables:
        RELEASE: "${VERSION}"
    # When the CI_COMMIT_TAG is present we are override the Gradle command
    # and configuring the tag as the version to build
    - if: $CI_COMMIT_TAG
      variables:
        RELEASE: "${CI_COMMIT_TAG}"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"
    - when: always

shellcheck:
  stage: test
  image:
    name: ${CI_REGISTRY}/tools/shellcheck:latest
  interruptible: true
  cache: {}
  needs: []
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_PIPELINE_SOURCE == "push"
      changes:
        - rootfs/*
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_PIPELINE_SOURCE == "web"
      changes:
        - rootfs/*
  variables:
    FILES: "find rootfs/ -type f"
  before_script:
    - shellcheck --version
  script:
    - ${FILES} | xargs -n 1 shellcheck --color=always

checkversion:
  stage: test
  image: registry.timmertech.nl/tools/chkver:latest
  rules:
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_PIPELINE_SOURCE == "schedule"
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_PIPELINE_SOURCE == "push"
    - if: $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN" && $CI_PIPELINE_SOURCE == "web"
  before_script: []
  variables:
    HEALTH_CHECK_UUID: f032f24d-963c-4014-9425-f6a9ac8b7070
  script:
    - scripts/check-version

release:
  extends: .docker-build-multi
  variables:
    REMOTE_VERSION: ${CI_COMMIT_TAG}
    PLATFORM: "linux/arm64,linux/amd64"
    DOCKER_HUB: "ENABLED"
    DOCKER_IMAGE: ${DOCKER_IMAGE_PATH}:${CI_COMMIT_TAG}
    DOCKER_BUILDX_JOB: $CI_JOB_ID
    DOCKER_BUILDX_CACHE_ENABLED: 0
    DOCKER_ARGS: >-
      --build-arg REMOTE_VERSION=${REMOTE_VERSION}
      --cache-from=type=registry,ref=${DOCKER_IMAGE_BASE}
    DOCKER_TAGS: >-
      --tag=${DOCKER_IMAGE_HUB_PATH}:${CI_COMMIT_TAG}
  only: null
  rules:
    - if: $CI_COMMIT_TAG
