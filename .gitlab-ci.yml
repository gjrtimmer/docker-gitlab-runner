image: registry.timmertech.nl/docker/docker:latest


stages:
  - verify
  - build
  - trigger


variables:
  CI: 'true'
  DOCKER_DRIVER: overlay2


################################################################################
# Template(s)
################################################################################
.build:
  stage: build
  interruptible: true
  variables:
    PROXY: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/
    DOCKER_FILE: Dockerfile
    DOCKER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest
  before_script:
    - echo "${CI_DEPENDENCY_PROXY_PASSWORD}" | docker login -u "${CI_DEPENDENCY_PROXY_USER}" --password-stdin "${CI_DEPENDENCY_PROXY_SERVER}"
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}
  script:
    - docker build --pull
        --build-arg VCS_REF="${CI_COMMIT_SHORT_SHA}"
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
        --build-arg CI_PROJECT_NAME=${CI_PROJECT_NAME}
        --build-arg CI_PROJECT_URL="${CI_PROJECT_URL}"
        --build-arg DOCKER_IMAGE=${DOCKER_IMAGE}
        --file=${DOCKER_FILE}
        --tag=${DOCKER_IMAGE} .


################################################################################
# Job Configuration
################################################################################
# Verify Bash Scripting
shellcheck:
  stage: verify
  image: ${CI_REGISTRY}/docker/shellcheck:latest
  interruptible: true
  cache: {}
  needs: []
  only:
    refs:
      - master
      - branches
    changes:
      - hooks/*
      - root/*
  before_script:
    - shellcheck --version
  script:
    - shellcheck $(find hooks/ -type f)
    - shellcheck $(find root/ -type f)


update:
  stage: build
  extends: .build
  only:
    - master
    - schedules


docker.hub:
  stage: trigger
  interruptible: true
  only:
    - schedules
  script:
    - curl -s -H -X POST ${DOCKERHUB_TRIGGER} > /dev/null


# EOF