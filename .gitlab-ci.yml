image: registry.timmertech.nl/docker/docker:latest

stages:
  - verify
  - build
  - publish

variables:
  CI: "true"
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest

################################################################################
# Workflow
################################################################################
workflow:
  rules:
    # If $VERSION variable defined have it take precedence over the commit tag
    - if: $VERSION
      variables:
        RELEASE: "${VERSION}"
    # When the CI_COMMIT_TAG is present we are override the Gradle command
    # and configuring the tag as the version to build
    - if: $CI_COMMIT_TAG
      variables:
        RELEASE: "${CI_COMMIT_TAG}"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"
    - when: always

################################################################################
# Templates
################################################################################
.build:
  interruptible: true
  variables:
    DOCKER_FILE: Dockerfile
  before_script:
    - echo "${DOCKER_PROXY_PASS}" | docker login -u "${DOCKER_PROXY_USER}" --password-stdin "${DOCKER_PROXY_HOST}"
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}
  script:
    - docker build --pull
      --build-arg VCS_REF="${CI_COMMIT_SHORT_SHA}"
      --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
      --build-arg CI_PROJECT_NAME=${CI_PROJECT_NAME}
      --build-arg CI_PROJECT_URL="${CI_PROJECT_URL}"
      --build-arg DOCKER_IMAGE=${DOCKER_IMAGE}
      --build-arg DOCKER_PROXY_HOST=${DOCKER_PROXY_HOST}
      --file=${DOCKER_FILE}
      --tag=${DOCKER_IMAGE} .
    - docker push ${DOCKER_IMAGE}

.dockerhub:
  before_script:
    - echo "${DOCKERHUB_PASS}" | docker login -u ${DOCKERHUB_USER} --password-stdin ${DOCKERHUB_REGISTRY}
  script:
    - docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE_HUB}
    - docker push ${DOCKER_IMAGE_HUB}

################################################################################
# Job Configuration
################################################################################
# Verify Bash Scripting
shellcheck:
  stage: verify
  image: ${CI_REGISTRY}/docker/shellcheck:latest
  interruptible: true
  cache: {}
  needs: []
  only:
    refs:
      - master
      - branches
    changes:
      - root/*
  before_script:
    - shellcheck --version
  script:
    - shellcheck $(find root/ -type f)
    - find root/ -type f | xargs -n 1 shellcheck --color=always

build:
  stage: build
  extends: .build
  only:
    - master
    - schedules

dockerhub:
  stage: publish
  extends: .dockerhub
  variables:
    DOCKER_IMAGE_HUB: ${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${CI_PROJECT_NAME}:latest
  only:
    - master
    - schedules

release:
  stage: build
  extends: .build
  variables:
    DOCKER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_TAG}
  only:
    - tags

dockerhub-release:
  stage: publish
  extends: .dockerhub
  variables:
    DOCKER_IMAGE_HUB: ${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}
  only:
    - tags
