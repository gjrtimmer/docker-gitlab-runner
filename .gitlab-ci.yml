default:
  image: registry.timmertech.nl/docker/docker:latest

stages:
  - verify
  - build
  - deploy

include:
  - project: templates/ci
    file: docker.yml

workflow:
  rules:
    # If $VERSION variable defined have it take precedence over the commit tag
    - if: $VERSION
      variables:
        RELEASE: "${VERSION}"
    # When the CI_COMMIT_TAG is present we are override the Gradle command
    # and configuring the tag as the version to build
    - if: $CI_COMMIT_TAG
      variables:
        RELEASE: "${CI_COMMIT_TAG}"
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"
    - when: always

.build:
  extends: .docker-build-multi
  variables:
    PLATFORM: "linux/arm64,linux/amd64"
    DOCKER_ARGS: >-
      --build-arg REMOTE_VERSION=${REMOTE_VERSION}

# Verify Bash Scripting
shellcheck:
  stage: verify
  image:
    name: ${CI_REGISTRY}/docker/shellcheck:latest
  interruptible: true
  cache: {}
  needs: []
  only:
    refs:
      - main
      - branches
    changes:
      - rootfs/*
  variables:
    FILES: "find rootfs/ -type f"
  before_script:
    - shellcheck --version
  script:
    - ${FILES} | xargs -n 1 shellcheck --color=always

checkversion:
  stage: verify
  image: registry.timmertech.nl/tools/chkver:latest
  only:
    variables:
      - $GITLAB_USER_NAME != "PROJECT_BOT_TOKEN"
    refs:
      - schedules
  before_script: []
  script:
    - scripts/check-version

release:
  extends: .build
  variables:
    REMOTE_VERSION: ${CI_COMMIT_TAG}
    DOCKER_HUB: "ENABLED"
    DOCKER_IMAGE: ${DOCKER_IMAGE_PATH}:${CI_COMMIT_TAG}
    DOCKER_TAGS: >-
      --tag=${DOCKER_IMAGE_HUB_PATH}:${CI_COMMIT_TAG}
  only:
    - tags
